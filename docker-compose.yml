version: '3.5'
networks:
  faceapi_network:
    name: faceapi
    ipam:
      driver: default
      config:
        - subnet: 203.0.113.0/24

services:
  web-components:
    networks:
      faceapi_network:
        ipv4_address: 203.0.113.4
    deploy:
      resources:
        limits:
          memory: 256m
    image: registry.id3.eu/web-components:${WEB_COMPONENTS_VERSION}
    ports:
    - "7002:80"
    environment:
      UPSTREAM_BACKEND_URL: 203.0.113.2:8085
      UPSTREAM_LICENSE_API_KEY_GATEWAY_URL: 203.0.113.5:8089
      FACE_API_URL: ${FACE_API_URL}
      BASE_WEBSITE_URL: ${BASE_WEBSITE_URL}
      API_KEY: ${API_KEY}
      DOCUMENTATION_ENABLED: ${DOCUMENTATION_ENABLED}
    volumes:
      - ./log/web-components:/var/log/nginx/
    restart: always

  faceapi-backend:
    networks:
      faceapi_network:
        ipv4_address: 203.0.113.2
    deploy:
      resources:
        limits:
          memory: 3g
    privileged: true
    image: registry.id3.eu/faceapi-backend:${FACE_API_VERSION}
    ports:
    - "7000:8085"
    - "9011:9011"
    - "9021:9021"
    depends_on:
      - "keycloak"
      - "minio"
    environment:
      EXTERNAL_IP: "127.0.0.1"
      Xmx: 2g
      profile: ${PROFILE}
      #TODO Delete next line (only for test purpose)
      additional_properties: '--transactions.service.id=face-api-staging --transactions.service.url=http://docker-staging.dmz.id3.lan:8004/log'
    volumes:
      - ./log/faceapi-backend:/usr/local/id3/facerestapi/logs
      - /usr/local/etc:/usr/local/etc
      - type: bind
        source: /dev/nvme0n1p1
        target: /dev/vda
    restart: always

  postgres:
    networks:
      faceapi_network:
        ipv4_address: 203.0.113.8
    deploy:
      resources:
        limits:
          memory: 256m
    image: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${SECRET}
    restart: always
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:5432"]
        interval: 5s
        timeout: 10s
        retries: 5

  keycloak:
    networks:
      faceapi_network:
        ipv4_address: 203.0.113.6
    deploy:
      resources:
        limits:
          memory: 256m
    image: registry.id3.eu/on-premise-keycloak:${ON_PREMISE_KEYCLOAK_VERSION}
    ports:
    - "8070:8080"
    depends_on:
      - "postgres"
    environment:
      DB_ADDR: 203.0.113.8:5432
      MODULE: face-api
      INSTANCE_OWNER: ${OWNER}
      SECRET: ${SECRET}
    volumes:
      - ./log/keycloak:/opt/jboss/keycloak/standalone/log/
    restart: always
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8080/auth/realms/id3-license/.well-known/openid-configuration"]
        interval: 5s
        timeout: 10s
        retries: 5

  api-key-gateway:
    networks:
      faceapi_network:
        ipv4_address: 203.0.113.5
    deploy:
      resources:
        limits:
          memory: 512m
    privileged: true
    image: registry.id3.eu/api-key-gateway:${API_KEY_GATEWAY_VERSION}
    ports:
    - "8089:8089"
    - "9013:9011"
    - "9023:9021"
    depends_on:
      - "keycloak"
      - "minio"
    environment:
      EXTERNAL_IP: 127.0.0.1
      Xmx: 512m
      profile: ${PROFILE}
    volumes:
      - ./log/api-key-gateway:/usr/local/id3/licenseapikeygateway/logs
      - /usr/local/etc:/usr/local/etc
      - type: bind
        source: /dev/nvme0n1p1
        target: /dev/vda
    restart: always

  minio:
    networks:
      faceapi_network:
        ipv4_address: 203.0.113.7
    deploy:
      resources:
        limits:
          memory: 256m
    privileged: true
    image: minio/minio:RELEASE.2019-10-12T01-39-57Z
    ports:
    - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: ${SECRET}
    command: server /data
    volumes:
      - /data/minio:/data
      - type: bind
        source: /dev/nvme0n1p1
        target: /dev/vda
    restart: always
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000"]
        interval: 5s
        timeout: 10s
        retries: 5
